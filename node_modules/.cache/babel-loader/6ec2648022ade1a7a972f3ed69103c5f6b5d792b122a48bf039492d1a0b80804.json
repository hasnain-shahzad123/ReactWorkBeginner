{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\newapp\\\\src\\\\Name.jsx\";\n// import React from \"react\";\n// function Name(props){\n\n//     return <><h1>Name</h1>\n//     <p>{props.work}</p>\n//     <div><h1>Ohh React is a Library</h1></div>\n//     </>\n// }\n// export default Name;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Name = props => {\n  // let x=props.x;\n  // let y=props.y;\n  // let z=props.z;\n  let {\n    x,\n    y,\n    z\n  } = props; //this is object destructuring \n  console.log(props.x);\n  if (x == y && y == z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This is matcing\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), props.x, \" \", props.y, \" \", props.z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This is not matching\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 40\n        }, this), props.x, \" \", props.y, \" \", props.z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = Name;\nexport default Name;\nvar _c;\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Name","props","x","y","z","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reacttut/newapp/src/Name.jsx"],"sourcesContent":["// import React from \"react\";\r\n// function Name(props){\r\n    \r\n//     return <><h1>Name</h1>\r\n//     <p>{props.work}</p>\r\n//     <div><h1>Ohh React is a Library</h1></div>\r\n//     </>\r\n// }\r\n// export default Name;\r\n\r\nimport React from \"react\";\r\nconst Name=(props)=>{\r\n    // let x=props.x;\r\n    // let y=props.y;\r\n    // let z=props.z;\r\n    let{x,y,z}=props //this is object destructuring \r\n    console.log(props.x)\r\n        if(x==y && y==z){\r\n            return (\r\n                <>\r\n                <p>This is matcing \r\n                <br/>\r\n                {props.x} {props.y} {props.z}</p>\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <>\r\n                <p>This is not matching<br/>\r\n                {props.x} {props.y} {props.z}</p>\r\n                </>\r\n            )\r\n        }\r\n}\r\nexport default Name;"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1B,MAAMC,IAAI,GAAEC,KAAK,IAAG;EAChB;EACA;EACA;EACA,IAAG;IAACC,CAAC;IAACC,CAAC;IAACC;EAAC,CAAC,GAACH,KAAK,EAAC;EACjBI,OAAO,CAACC,GAAG,CAACL,KAAK,CAACC,CAAC,CAAC;EAChB,IAAGA,CAAC,IAAEC,CAAC,IAAIA,CAAC,IAAEC,CAAC,EAAC;IACZ,oBACIP,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACAV,OAAA;QAAAU,QAAA,GAAG,iBACH,eAAAV,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACJV,KAAK,CAACC,CAAC,EAAC,GAAC,EAACD,KAAK,CAACE,CAAC,EAAC,GAAC,EAACF,KAAK,CAACG,CAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAC/B,CAAC;EAEX,CAAC,MACG;IACA,oBACId,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACAV,OAAA;QAAAU,QAAA,GAAG,sBAAoB,eAAAV,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC3BV,KAAK,CAACC,CAAC,EAAC,GAAC,EAACD,KAAK,CAACE,CAAC,EAAC,GAAC,EAACF,KAAK,CAACG,CAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAC/B,CAAC;EAEX;AACR,CAAC;AAAAC,EAAA,GAvBKZ,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}